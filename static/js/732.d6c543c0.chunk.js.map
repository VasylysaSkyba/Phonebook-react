{"version":3,"file":"static/js/732.d6c543c0.chunk.js","mappings":"gPACA,EAAwB,yBAAxB,EAAyD,yBAAzD,EAA0F,yBCD7EA,EAAe,CACxBC,MAAO,GACPC,SAAU,I,SC+Cd,EA7CkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDJ,aAAAA,EACAG,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBN,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAEf,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WACE,iBAAKE,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcC,QAAQ,GAAxC,SAA2C,iBAG3C,kBACEC,MAAOX,EACPY,KAAK,QACLC,SAAUR,EACVG,UAAWC,EACXK,KAAK,QACLC,YAAY,mBACZC,UAAQ,QAGZ,iBAAKR,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcC,QAAQ,GAAxC,SAA2C,oBAG3C,kBACEC,MAAOV,EACPW,KAAK,WACLC,SAAUR,EACVG,UAAWC,EACXK,KAAK,WACLC,YAAY,kCACZC,UAAQ,QAGZ,gBAAKR,UAAWC,EAAhB,UACE,mBAAQK,KAAK,SAAb,SAAsB,cAI7B,ECrBD,EApBkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,GAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAMhB,OALgBH,EAAAA,EAAAA,IAAYI,EAAAA,IAMnB,SAAC,KAAD,CAAUC,GAAG,eAGpB,4BACE,wBAAI,gBACJ,SAAC,EAAD,CAAWtB,SATC,SAAAuB,GACdR,GAASS,EAAAA,EAAAA,GAAMD,GAChB,IAQIJ,IAAU,eAAGM,MAAO,CAAEC,MAAO,OAAnB,UAA4B,IAAEN,OAG9C,C,8ECxBM,IAAMF,EAAe,SAAC,GAAD,SAAGS,KAAgBC,OAAS,CAAC,CAA7B,EACfP,EAAS,SAAC,GAAD,SAAGM,KAAgBE,OAAnB,C,mECuBtB,IAtBgB,SAAC,GAAgC,IAA9BhC,EAA6B,EAA7BA,aAAcG,EAAe,EAAfA,SAC/B,GAA0B8B,EAAAA,EAAAA,WAAS,UAAKjC,IAAxC,eAAOK,EAAP,KAAc6B,EAAd,KAEM5B,GAAe6B,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOvB,EAAgBuB,EAAhBvB,KAAMD,EAAUwB,EAAVxB,MACdsB,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwBxB,EAAOD,GAChC,GACF,GACD,CAACsB,IASH,MAAO,CAAE7B,MAAAA,EAAO6B,SAAAA,EAAU5B,aAAAA,EAAcC,aANnB,SAAA+B,GACnBA,EAAEC,iBACFpC,GAAS,UAAKE,IACd6B,GAAS,UAAKlC,GACf,EAGF,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/initialState.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js","shared/api/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"LoginForm_group__GZR2F\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\"};","export const initialState = {\n    email: '',\n    password: '',\n  };","import useForm from 'shared/api/hooks/useForm';\nimport styles from './LoginForm.module.css';\nimport { initialState } from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          User email:\n        </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"email\"\n          placeholder=\"Enter user email\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          User password:\n        </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          placeholder=\"Should be at least 7 characters\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <button type=\"submit\">Login</button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { login } from 'redux/auth/auth-operations';\nimport { getAuthError, isAuth } from 'redux/auth/auth-selectors';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h2>Login Page</h2>\n      <LoginForm onSubmit={onLogin} />\n      {status && <p style={{ color: 'red' }}> {message}</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;","export const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;"],"names":["initialState","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","className","styles","htmlFor","value","name","onChange","type","placeholder","required","dispatch","useDispatch","useSelector","getAuthError","status","message","isAuth","to","data","login","style","color","auth","error","isLogin","useState","setState","useCallback","target","prevState","e","preventDefault"],"sourceRoot":""}